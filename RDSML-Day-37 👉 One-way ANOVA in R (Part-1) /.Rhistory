var1= 500
print('var1')
print(var1)
var_2= mobile
var_2= 'mobile'
print(var_2)
assign('var5', 400)
print(var5)
if_=30
if2= 'mobile phone'
print(class(if_))
print(class(if2))
print(ls())
#find variables
print(ls(all.names = TRUE))
rm(var5)
print(ls(all.names = TRUE))
var5=300
print(ls(all.names = TRUE))
6*8
library(readxl)
data_MoST_24_25 <- read_excel("Desktop/Article/R/All works/data MoST 24-25.xlsx",
sheet = "Sheet4", range = "A1:AA87")
View(data_MoST_24_25)
library(readxl)
pc <- read_excel("Desktop/Article/R/All works/data MoST 24-25.xlsx",
sheet = "Sheet4", range = "A1:AA87")
View(pc)
library(devtools)
install.packages('devtools')
library(devtools)
library(devtools)
library(ggbiplot)
library(devtools)
library(ggbiplot)
library(ggplot2)
pca = prcomp(pc[-1],
center = TRUE,
scale. = TRUE)
pca$scale
print(pca)
summary(pca)
g = ggbiplot(pca,
obs.scale = 1,
var.scale = 1,
groups = pc$water,
ellipse = TRUE,
circle = TRUE,
ellipse.prob = 0.68)
View(g)
g = ggbiplot(pca,
obs.scale = 1,
var.scale = 1,
groups = pc$water,
ellipse = TRUE,
circle = TRUE,
ellipse.prob = 0.68)
g = ggbiplot(pca,
obs.scale = 1,
var.scale = 1,
groups = pc$water,
ellipse = TRUE,
circle = TRUE,
ellipse.prob = 0.68)+
scale_color_discrete(name = '') +
theme(legend.direction = 'horizontal',
legend.position = 'top')
print(g)
g = ggbiplot(pca,
obs.scale = 1,
var.scale = 1,
groups = pc$water,
ellipse = TRUE,
circle = TRUE,
ellipse.prob = 0.68)+
scale_color_discrete(name = '') +
theme(legend.direction = 'horizontal',
legend.position = 'right')
g = ggbiplot(pca,
obs.scale = 1,
var.scale = 1,
groups = pc$water,
ellipse = TRUE,
circle = TRUE,
ellipse.prob = 0.68)+
scale_color_discrete(name = '') +
theme(legend.direction = 'horizontal',
legend.position = 'right')
print(g)
g = ggbiplot(pca,
obs.scale = 1,
var.scale = 1,
groups = pc$water,
ellipse = TRUE,
circle = TRUE,
ellipse.prob = 0.68)+
scale_color_discrete(name = '') +
theme(legend.direction = 'vertical',
legend.position = 'top')
print(g)
setwd("~/Desktop/Article/R/All works/R-for-Data-Science-and-Machine-Learning-Batch8-NBICT/RDSML-Day-37 ðŸ‘‰ One-way ANOVA in R (Part-1) ")
PlantGrowth <- PlantGrowth
View(PlantGrowth)
install.packages("dplyr")
library(dplyr)
install.packages("dp
install.packages("dplyr")
install.packages("dplyr")
library(dplyr)
#Computing the grpoup means and standard deviations, SE
PlantGrowth %>%
group_by(group) %>%
summarise(
count = n(),
mean = mean(weight, na.rm = TRUE),
sd = sd(weight, na.rm = TRUE),
se = sd/sqrt(count)
)
stats = PlantGrowth %>%
group_by(group) %>%
summarise(
count = n(),
mean = mean(weight),
sd = sd(weight),
se = sd (weight)/sqrt(n()))
print(stats)
#Visualizing the data
install.packages("ggplot2")
library(ggplot2)
ggplot(PlantGrowth, aes(x=group, y=weight, fill=group)) +
geom_boxplot() +
geom_jitter(shape=16, position=position_jitter(0.2)) +
labs(title="Boxplot of Plant Growth by Treatment Group",
x="Treatment Group",
y="Weight") +
theme_minimal()
boxplot(weight ~ group,
data = PlantGrowth,
main = "PlantGrowth data",
ylab = "Dried weight of plants", col = "lightgray")
#Visualizing the data
install.packages("ggplot2")
library(ggplot2)
library(ggplot2)
ggplot(PlantGrowth, aes(x = group, y = weight)) +
geom_point() +
geom_jitter(width = 0.1) +
geom_boxplot(alpha = 0.5, outlier.colour = "red", outlier.shape = 16, outlier.size = 2) +
labs(title = "PlantGrowth data", x = "Group", y = "Dried weight of plants") +
theme_minimal()
boxplot(weight ~ group,
data = PlantGrowth,
main = "PlantGrowth data",
ylab = "Dried weight of plants", col = "lightgray")
install.packages("ggpubr")
library(ggpubr)
#Creating groupwise violin plots to see the distribution of data
ggviolin(PlantGrowth, x = "group", y = "weight",
fill = "group", palette = "jco",
add = "boxplot", add.params = list(fill = "white")) +
stat_compare_means(label.y = 9)
ggline(PlantGrowth,
x = 'group',
y = 'weight',
add = c('mean_se', 'jitter'),
fill = 'group',)
ggline(PlantGrowth,
x = 'group',
y = 'weight',
add = c('mean_se', 'jitter'),
fill = 'group',)
#rUNNING THE ANOVA TEST
anova_result = aov(weight ~ group, data = PlantGrowth)
summary(anova_result)
anova = aov(weight ~ group, data = PlantGrowth)
summary(anova)
tukey = TukeyHSD(anova)
print(tukey)
summary(anova)
