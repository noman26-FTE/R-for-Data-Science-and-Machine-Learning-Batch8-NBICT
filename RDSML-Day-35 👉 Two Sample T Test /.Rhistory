var1= 500
print('var1')
print(var1)
var_2= mobile
var_2= 'mobile'
print(var_2)
assign('var5', 400)
print(var5)
if_=30
if2= 'mobile phone'
print(class(if_))
print(class(if2))
print(ls())
#find variables
print(ls(all.names = TRUE))
rm(var5)
print(ls(all.names = TRUE))
var5=300
print(ls(all.names = TRUE))
6*8
library(readxl)
data_MoST_24_25 <- read_excel("Desktop/Article/R/All works/data MoST 24-25.xlsx",
sheet = "Sheet4", range = "A1:AA87")
View(data_MoST_24_25)
library(readxl)
pc <- read_excel("Desktop/Article/R/All works/data MoST 24-25.xlsx",
sheet = "Sheet4", range = "A1:AA87")
View(pc)
library(devtools)
install.packages('devtools')
library(devtools)
library(devtools)
library(ggbiplot)
library(devtools)
library(ggbiplot)
library(ggplot2)
pca = prcomp(pc[-1],
center = TRUE,
scale. = TRUE)
pca$scale
print(pca)
summary(pca)
g = ggbiplot(pca,
obs.scale = 1,
var.scale = 1,
groups = pc$water,
ellipse = TRUE,
circle = TRUE,
ellipse.prob = 0.68)
View(g)
g = ggbiplot(pca,
obs.scale = 1,
var.scale = 1,
groups = pc$water,
ellipse = TRUE,
circle = TRUE,
ellipse.prob = 0.68)
g = ggbiplot(pca,
obs.scale = 1,
var.scale = 1,
groups = pc$water,
ellipse = TRUE,
circle = TRUE,
ellipse.prob = 0.68)+
scale_color_discrete(name = '') +
theme(legend.direction = 'horizontal',
legend.position = 'top')
print(g)
g = ggbiplot(pca,
obs.scale = 1,
var.scale = 1,
groups = pc$water,
ellipse = TRUE,
circle = TRUE,
ellipse.prob = 0.68)+
scale_color_discrete(name = '') +
theme(legend.direction = 'horizontal',
legend.position = 'right')
g = ggbiplot(pca,
obs.scale = 1,
var.scale = 1,
groups = pc$water,
ellipse = TRUE,
circle = TRUE,
ellipse.prob = 0.68)+
scale_color_discrete(name = '') +
theme(legend.direction = 'horizontal',
legend.position = 'right')
print(g)
g = ggbiplot(pca,
obs.scale = 1,
var.scale = 1,
groups = pc$water,
ellipse = TRUE,
circle = TRUE,
ellipse.prob = 0.68)+
scale_color_discrete(name = '') +
theme(legend.direction = 'vertical',
legend.position = 'top')
print(g)
setwd("~/Desktop/Article/R/All works/R-for-Data-Science-and-Machine-Learning-Batch8-NBICT/RDSML-Day-35 ðŸ‘‰ Two Sample T Test ")
library(readr)
scores <- read_csv("scores.csv")
View(scores)
scores <- read_csv("scores.csv")
View(scores)
#checking the normality of the data
shapiro.test(scores$Male)
shapiro.test(scores$Female)
var.test(scores$Male, scores$Female)
var.test(x = scores$Male, y = scores$Female)
#Running the independent sample t test
t.test(x = scores$Male, y = scores$Female, var.equal = TRUE)
boxplot(x = scores$Male, y = scores$Female)
Box plot help us to understand the data
#Visualize the male and female data through boxplot
library(ggplot2)
ggplot(scores, aes(x=Male, y=Female)) +
geom_boxplot()
boxplot(x = scores$Male ~ y = scores$Female)
boxplot(scores$Male ~ scores$Female)
setwd("~/Desktop/Article/R/All works/R-for-Data-Science-and-Machine-Learning-Batch8-NBICT/RDSML-Day-35 ðŸ‘‰ Two Sample T Test ")
library(readxl)
Scores <- read_excel("Scores.xlsx")
View(Scores)
View(Scores)
str(Scores)
Scores$Gender <- as.factor(Scores$Gender)
str(Scores)
boxplot(Scores$Male ~ Scores$Female)
boxplot(Scores$Gender ~ Scores$Scores)
data <- read_excel("Scores.xlsx")
View(data)
str(data)
data$Gender <- as.factor(data$Gender)
str(data)
boxplot(data$Gender ~ data$Scores)
boxplot(data$Gender ~ data$Scores)
boxplot(data$Scores ~ data$Gender)
t.test(data$Scores ~ data$Gender, var.equal = TRUE)
boxplot(data$Scores ~ data$Gender)+
theme_minimal(base_size = 14) +
theme(plot.title = element_text(face = "bold", size = 15),
axis.title = element_text(face = "bold"),
legend.title = element_text(face = "bold"),
legend.position = "top")
boxplot(data$Scores ~ data$Gender)+
geom_boxplot(position = position_dodge(1)) +
scale_fill_manual(values = c("orange", "lightblue"))+
theme_classic()
boxplot(data$Scores ~ data$Gender)+
geom_boxplot(position = position_dodge(1)) +
scale_fill_manual(values = c("orange", "lightblue"))+
theme_classic()
boxplot(data$Scores ~ data$Gender)
#Creating boxplot to visualize the data
library(ggplot2)
boxplot(data$Scores ~ data$Gender)+ geom_jitter(width = 0.2)
boxplot(data$Scores ~ data$Gender, filled.contour())
boxplot(data$Scores ~ data$Gender)+ geom_boxplot()
#Color change of boxplot
boxplot(data$Scores ~ data$Gender, col = c("lightblue", "lightgreen"))
#Changing the position of box plots
boxplot(data$Scores ~ data$Gender, col = c("lightblue", "lightgreen"), horizontal = TRUE)
#Color change of boxplot
boxplot(data$Scores ~ data$Gender, col = c("orange", "blue"))
#Changing the position of box plots
boxplot(Obtained scores =data$Scores ~ Gender=data$Gender, col = c("lightblue", "lightgreen"), horizontal = TRUE)
#Changing the position of box plots
boxplot(obtained scores =data$Scores ~ Gender=data$Gender, col = c("lightblue", "lightgreen"), horizontal = TRUE)
#Changing the position of box plots
boxplot( data$Scores ~ data$Gender, col = c("lightblue", "lightgreen"), horizontal = TRUE)
#Color change of boxplot
boxplot(data$Scores ~ data$Gender, col = c("orange", "blue"))
#Change the axis titles and main title of boxplot
boxplot(data$Scores ~ data$Gender, col = c("orange", "blue"))+ labs(title = "Mean Obtained Scores", x = "Time (Seconds)",y = "Force (g)")
ggplot(data = data, aes(x= Scores, y=Gender, var.equal = TRUE))+
geom_boxplot(fill = c("lightblue", "lightgreen"))
ggplot(data = data, aes(x= Gender, y=Scores, var.equal = TRUE))+
geom_boxplot(fill = c("lightblue", "lightgreen"))
ggplot(data = data, aes(x= Gender, y=Scores, var.equal = TRUE))+
geom_boxplot(position = position_dodge(1)) +
scale_fill_manual(values = c("orange", "lightblue"))+
theme_classic()
ggplot(data = data, aes(x= Gender, y=Scores, var.equal = TRUE))+
geom_boxplot(position = position_dodge(1)) +
scale_fill_manual(values = c("orange", "lightblue"))
ggplot(data = data, aes(x= Gender, y=Scores, var.equal = TRUE))+
geom_boxplot(fill = c("lightblue", "lightgreen"))
ggplot(data = data, aes(x= Gender, y=Scores, var.equal = TRUE))+
geom_boxplot(fill = c("lightblue", "lightgreen"))+
labs(title = "Boxplot for Obtained Scores",
x = "Gender",
y = "Scores")
ggplot(data = data, aes(x= Gender, y=Scores, var.equal = TRUE))+
geom_boxplot(fill = c("lightblue", "lightgreen"))+
labs(title = "Boxplot for Obtained Scores",
x = "Gender",
y = "Scores")+
theme_minimal(base_size = 14) +
theme(plot.title = element_text(face = "bold", size = 15),
axis.title = element_text(face = "bold"),
legend.title = element_text(face = "bold"),
legend.position = "top")
ggplot(data = data, aes(x= Gender, y=Scores, var.equal = TRUE))+
geom_boxplot(fill = c("lightblue", "lightgreen"))+
labs(title = "Boxplot for Obtained Scores",
x = "Gender",
y = "Scores")+
theme_classic(base_size = 14) +
theme(plot.title = element_text(face = "bold", size = 15),
axis.title = element_text(face = "bold"),
legend.title = element_text(face = "bold"),
legend.position = "top")
ggplot(data = data, aes(x= Gender, y=Scores, var.equal = TRUE))+
geom_boxplot(fill = c("lightblue", "lightgreen"))+
labs(title = "Boxplot for Obtained Scores",
x = "Gender",
y = "Scores")+
theme_classic(base_size = 14, base_family = "serif")+
theme(plot.title= element_text(face='bold', size = 16, hjust= 0.5), axis.title= element_text(face='bold', size=14, hjust=0.5),
axis.text= element_text(size= 12),
legend.position = "right",
legend.title= element_text(face='bold'), legend.text= element_text(size=12))
#Save the plot
ggsave("Boxplot for Obtained Scores.png", width = 8, height = 6)
