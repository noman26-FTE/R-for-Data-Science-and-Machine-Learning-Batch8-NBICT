var1= 500
print('var1')
print(var1)
var_2= mobile
var_2= 'mobile'
print(var_2)
assign('var5', 400)
print(var5)
if_=30
if2= 'mobile phone'
print(class(if_))
print(class(if2))
print(ls())
#find variables
print(ls(all.names = TRUE))
rm(var5)
print(ls(all.names = TRUE))
var5=300
print(ls(all.names = TRUE))
6*8
library(readxl)
data_MoST_24_25 <- read_excel("Desktop/Article/R/All works/data MoST 24-25.xlsx",
sheet = "Sheet4", range = "A1:AA87")
View(data_MoST_24_25)
library(readxl)
pc <- read_excel("Desktop/Article/R/All works/data MoST 24-25.xlsx",
sheet = "Sheet4", range = "A1:AA87")
View(pc)
library(devtools)
install.packages('devtools')
library(devtools)
library(devtools)
library(ggbiplot)
library(devtools)
library(ggbiplot)
library(ggplot2)
pca = prcomp(pc[-1],
center = TRUE,
scale. = TRUE)
pca$scale
print(pca)
summary(pca)
g = ggbiplot(pca,
obs.scale = 1,
var.scale = 1,
groups = pc$water,
ellipse = TRUE,
circle = TRUE,
ellipse.prob = 0.68)
View(g)
g = ggbiplot(pca,
obs.scale = 1,
var.scale = 1,
groups = pc$water,
ellipse = TRUE,
circle = TRUE,
ellipse.prob = 0.68)
g = ggbiplot(pca,
obs.scale = 1,
var.scale = 1,
groups = pc$water,
ellipse = TRUE,
circle = TRUE,
ellipse.prob = 0.68)+
scale_color_discrete(name = '') +
theme(legend.direction = 'horizontal',
legend.position = 'top')
print(g)
g = ggbiplot(pca,
obs.scale = 1,
var.scale = 1,
groups = pc$water,
ellipse = TRUE,
circle = TRUE,
ellipse.prob = 0.68)+
scale_color_discrete(name = '') +
theme(legend.direction = 'horizontal',
legend.position = 'right')
g = ggbiplot(pca,
obs.scale = 1,
var.scale = 1,
groups = pc$water,
ellipse = TRUE,
circle = TRUE,
ellipse.prob = 0.68)+
scale_color_discrete(name = '') +
theme(legend.direction = 'horizontal',
legend.position = 'right')
print(g)
g = ggbiplot(pca,
obs.scale = 1,
var.scale = 1,
groups = pc$water,
ellipse = TRUE,
circle = TRUE,
ellipse.prob = 0.68)+
scale_color_discrete(name = '') +
theme(legend.direction = 'vertical',
legend.position = 'top')
print(g)
setwd("~/Desktop/Article/R/All works/R-for-Data-Science-and-Machine-Learning-Batch8-NBICT/RDSML-Day-29 ðŸ‘‰ Visualizing Binomial Probability Distribution")
dbinom(x=4, size=10, prob=0.5)
pbinom(x=4, size=10, prob=0.5)
pbinom(q=4, size=10, prob=0.5)
n = c(0:10)
n
dbinom(x= n, size = 10, prob = 0.5)
plot(n, dbinom(x=n, size=10, prob=0.5), type="h", lwd=2, col="blue",
xlab="Number of Successes", ylab="Probability", main="Binomial Distribution (n=10, p=0.5)")
barplot(p)
p = dbinom(x= n, size = 10, prob = 0.5)
barplot(p)
library(visualize)
visualize(p, type = "bar", x = n, main = "Binomial Distribution (n=10, p=0.5)", xlab = "Number of Successes", ylab = "Probability")
visualize(p, type = "bar", x = n, main = "Binomial Distribution (n=10, p=0.5)", xlab = "Number of Successes", ylab = "Probability")
library('visualize')
visualize(p, type = "bar", x = n, main = "Binomial Distribution (n=10, p=0.5)", xlab = "Number of Successes", ylab = "Probability")
library(visualize)
visualize.binom(p, type = "bar", x = n, main = "Binomial Distribution (n=10, p=0.5)", xlab = "Number of Successes", ylab = "Probability")
visualize.binom(stat = 4, size = 10, prob = 0.5)
pbinom(q = 4, size = 10, prob = 0.5)
visualize.binom(stat = 4, size = 10, prob = 0.5, section = 'lower')
visualize.binom(stat = 4, size = 10, prob = 0.5, section = 'upper')
visualize.binom(stat = 4, size = 10, prob = 0.5, section = 'bounded')
visualize.binom(stat = c(4,6), size = 10, prob = 0.5, section = 'bounded')
visualize.binom(stat = c(3,7), size = 10, prob = 0.5, section = 'tails')
visualize.binom(stat = 4, size = 10, prob = 0.5)
grid(nx= NULL, ny= NULL, col = 'grey', lty = 'dotted')
dbinom(x=4, size=10, prob=0.5)
#To know exact probability of 4, often uses grid lines
grid(nx= NULL, ny= NULL, col = 'grey', lty = 'dotted')
