var1= 500
print('var1')
print(var1)
var_2= mobile
var_2= 'mobile'
print(var_2)
assign('var5', 400)
print(var5)
if_=30
if2= 'mobile phone'
print(class(if_))
print(class(if2))
print(ls())
#find variables
print(ls(all.names = TRUE))
rm(var5)
print(ls(all.names = TRUE))
var5=300
print(ls(all.names = TRUE))
6*8
library(readxl)
data_MoST_24_25 <- read_excel("Desktop/Article/R/All works/data MoST 24-25.xlsx",
sheet = "Sheet4", range = "A1:AA87")
View(data_MoST_24_25)
library(readxl)
pc <- read_excel("Desktop/Article/R/All works/data MoST 24-25.xlsx",
sheet = "Sheet4", range = "A1:AA87")
View(pc)
library(devtools)
install.packages('devtools')
library(devtools)
library(devtools)
library(ggbiplot)
library(devtools)
library(ggbiplot)
library(ggplot2)
pca = prcomp(pc[-1],
center = TRUE,
scale. = TRUE)
pca$scale
print(pca)
summary(pca)
g = ggbiplot(pca,
obs.scale = 1,
var.scale = 1,
groups = pc$water,
ellipse = TRUE,
circle = TRUE,
ellipse.prob = 0.68)
View(g)
g = ggbiplot(pca,
obs.scale = 1,
var.scale = 1,
groups = pc$water,
ellipse = TRUE,
circle = TRUE,
ellipse.prob = 0.68)
g = ggbiplot(pca,
obs.scale = 1,
var.scale = 1,
groups = pc$water,
ellipse = TRUE,
circle = TRUE,
ellipse.prob = 0.68)+
scale_color_discrete(name = '') +
theme(legend.direction = 'horizontal',
legend.position = 'top')
print(g)
g = ggbiplot(pca,
obs.scale = 1,
var.scale = 1,
groups = pc$water,
ellipse = TRUE,
circle = TRUE,
ellipse.prob = 0.68)+
scale_color_discrete(name = '') +
theme(legend.direction = 'horizontal',
legend.position = 'right')
g = ggbiplot(pca,
obs.scale = 1,
var.scale = 1,
groups = pc$water,
ellipse = TRUE,
circle = TRUE,
ellipse.prob = 0.68)+
scale_color_discrete(name = '') +
theme(legend.direction = 'horizontal',
legend.position = 'right')
print(g)
g = ggbiplot(pca,
obs.scale = 1,
var.scale = 1,
groups = pc$water,
ellipse = TRUE,
circle = TRUE,
ellipse.prob = 0.68)+
scale_color_discrete(name = '') +
theme(legend.direction = 'vertical',
legend.position = 'top')
print(g)
setwd("~/Desktop/Article/R/All works/R-for-Data-Science-and-Machine-Learning-Batch8-NBICT/RDSML-Day-39 ðŸ‘‰ Two-way ANOVA in R (Part-1)")
suppressPackageStartupMessages({
library(tidyverse); library(car); library(emmeans); library(effectsize)
library(performance); library(broom); library(broom.helpers)
library(kableExtra); library(multcomp); library(multcompView); library(patchwork)
})
options(contrasts = c("contr.sum","contr.poly"))
theme_set(theme_classic(base_size = 12))
d <- read.csv("cropdata.csv", stringsAsFactors = FALSE)
## â”€â”€ 0) Writer: NBICT LAB ----
#press ctrl+shift+c for comment or uncomment
# install.packages(c("tidyverse","car","emmeans","effectsize","performance","broom","broom.helpers","kableExtra","multcomp","multcompView","patchwork"
# ))
suppressPackageStartupMessages({
library(tidyverse); library(car); library(emmeans); library(effectsize)
library(performance); library(broom); library(broom.helpers)
library(kableExtra); library(multcomp); library(multcompView); library(patchwork)
})
# Recommended for Type-III SS (sum-to-zero contrasts)
options(contrasts = c("contr.sum","contr.poly"))
theme_set(theme_classic(base_size = 12))
## â”€â”€ 1) Import & basic hygiene ----
d <- read.csv("cropdata.csv", stringsAsFactors = FALSE)
View(d)
d <- d %>%
mutate(
y    = as.numeric(y),
fert = factor(fert),
irr  = factor(irr)
) %>%
drop_na(y, fert, irr)
print(d)
cat("\nCell counts (balance check):\n")
print(with(d, table(fert, irr)))
cat("\nGroup means (preview):\n")
print(d %>% group_by(fert, irr) %>% summarise(n=dplyr::n(), mean=mean(y), sd=sd(y), .groups="drop"))
summs <- d %>%
group_by(fert, irr) %>%
summarise(
n   = dplyr::n(),
mean= mean(y),
sd  = sd(y),
se  = sd/sqrt(n),
ci  = qt(.975, df=n-1)*se,  # 95% CI
.groups = "drop"
)
print(summs)
p_raw <- ggplot(d, aes(irr, y, color=fert)) +
geom_jitter(width=.08, height=0, alpha=.4) +
stat_summary(fun=mean, geom="point", position=position_dodge(width=.4), size=2.4) +
labs(title="Raw data with means", x="Irrigation", y="Yield")
p_raw
p_ci <- ggplot(summs, aes(irr, mean, group=fert, color=fert)) +
geom_line(position=position_dodge(width=.3)) +
geom_point(size=2, position=position_dodge(width=.3)) +
geom_errorbar(aes(ymin=mean-ci, ymax=mean+ci),
width=.15, position=position_dodge(width=.3)) +
labs(title="Means Â± 95% CI by Fertilizer Ã— Irrigation", x="Irrigation", y="Mean yield")
p_ci
(p_raw / p_ci) + plot_annotation(title = "Exploratory view")
m <- aov(y ~ fert * irr, data = d)
m
aov_tab <- Anova(m, type = 3) %>%
tidy() %>%
mutate(p.value = signif(p.value, 3))
View(aov_tab)
kbl(aov_tab, digits = 3, caption = "Two-way ANOVA") %>%
kable_classic(full_width = FALSE, html_font = "Times New Roman")
## â”€â”€ 4) Model diagnostics & assumptions ----
# Visual checks
par(mfrow=c(2,2)); plot(m); par(mfrow=c(1,1))
res <- residuals(m)
shapiro_p <- shapiro.test(res)$p.value
cat("\nShapiro-Wilk p =", signif(shapiro_p,3), "(normality of residuals)\n")
cat("\nLevene test (median-based) for homogeneity of variance:\n"); print(lev)
lev <- car::leveneTest(y ~ fert*irr, data = d, center = median)
cat("\nLevene test (median-based) for homogeneity of variance:\n"); print(lev)
cat("\nperformance::check_model(m):\n")
print(performance::check_model(m))  # plots/flags common issues
# Comprehensive diagnostics (performance)
cat("\nperformance::check_model(m):\n")
print(performance::check_model(m))
cat("\nperformance::check_model(m):\n")
print(performance::check_model(m))
cell_tests <- d %>% group_by(fert, irr) %>%
summarise(sw_p = tryCatch(shapiro.test(y)$p.value, error=function(e) NA_real_), .groups="drop")
print(cell_tests)
## â”€â”€ 5) Estimated marginal means (EMMs) & contrasts ----
emm_int <- emmeans(m, ~ fert * irr)
fert_within_irr <- contrast(emmeans(m, ~ fert | irr), method = "pairwise", adjust = "tukey")
cat("\nPairwise fert within each irr:\n"); print(fert_within_irr)
irr_within_fert <- contrast(emmeans(m, ~ irr | fert), method = "pairwise", adjust = "tukey")
cat("\nPairwise irr within each fert:\n"); print(irr_within_fert)
emm_fert <- emmeans(m, ~ fert)
emm_irr  <- emmeans(m, ~ irr)
cat("\nMain effects (fert):\n"); print(contrast(emm_fert, "tukey"))
cat("\nMain effects (irr):\n");  print(contrast(emm_irr,  "tukey"))
cld_letters <- multcomp::cld(emm_int, Letters = letters, adjust = "tukey")
print(cld_letters)
emm_df <- as.data.frame(cld_letters)
p_emm <- ggplot(emm_df, aes(irr, emmean, group=fert, color=fert)) +
geom_line(position=position_dodge(width=.3)) +
geom_point(size=2, position=position_dodge(width=.3)) +
geom_errorbar(aes(ymin=lower.CL, ymax=upper.CL),
width=.15, position=position_dodge(width=.3)) +
geom_text(aes(label=.group), vjust=-1.1, position=position_dodge(width=.3), show.legend = FALSE) +
labs(title="EMMs Â± 95% CI with CLD letters", x="Irrigation", y="Estimated marginal mean")
print(p_emm)
infl <- broom::augment(m) %>%
mutate(.cooks_flag = abs(.cooksd) > (4/ (nrow(d) - length(coef(m)))),
.stdres_flag = abs(.std.resid) > 3)
## â”€â”€ 6) Influence & outlier check (optional but useful) ----
infl <- broom::augment(m) %>%
mutate(.cooks_flag = abs(.cooksd) > (4/ (nrow(d) - length(coef(m)))),
.stdres_flag = abs(.std.resid) > 3)
cat("\nPossible influential points (Cook's D > 4/df or |Std.Resid| > 3):\n")
print(infl %>% filter(.cooks_flag | .stdres_flag))
car::influencePlot(m, main="Influence Plot (Cook's distance)", sub="Look for leverage/outliers")
report_lines <- glue::glue(
"ANOVA (Type III): fert, irr, and their interaction tested on yield.\n",
"Partial eta^2 shown in table; use generalized eta^2 for between-design comparisons."
)
report_lines <- glue::glue(
"ANOVA (Type III): fert, irr, and their interaction tested on yield.\n",
"Partial eta^2 shown in table; use generalized eta^2 for between-design comparisons."
)
# Save key outputs
write.csv(aov_tab, "anova_table_typeIII_with_effectsizes.csv", row.names = FALSE)
write.csv(aov_tab, "anova_table_typeIII_with_effectsizes.csv", row.names = FALSE)
saveRDS(list(
model = m,
aov_table = aov_tab,
emm_interaction = emm_int,
fert_within_irr = fert_within_irr,
irr_within_fert = irr_within_fert,
cld_letters = cld_letters,
influence = infl
), file = "two_way_anova_outputs.rds")
two_way_anova_outputs <- readRDS("~/Desktop/Article/R/All works/R-for-Data-Science-and-Machine-Learning-Batch8-NBICT/RDSML-Day-39 ðŸ‘‰ Two-way ANOVA in R (Part-1)/two_way_anova_outputs.rds")
two_way_anova_outputs <- readRDS("~/Desktop/Article/R/All works/R-for-Data-Science-and-Machine-Learning-Batch8-NBICT/RDSML-Day-39 ðŸ‘‰ Two-way ANOVA in R (Part-1)/two_way_anova_outputs.rds")
two_way_anova_outputs <- readRDS("~/Desktop/Article/R/All works/R-for-Data-Science-and-Machine-Learning-Batch8-NBICT/RDSML-Day-39 ðŸ‘‰ Two-way ANOVA in R (Part-1)/two_way_anova_outputs.rds")
View(aov_tab)
View(cell_tests)
setwd("~/Desktop/Article/R/All works/R-for-Data-Science-and-Machine-Learning-Batch8-NBICT/RDSML-Day-39 ðŸ‘‰ Two-way ANOVA in R (Part-1)")
setwd("~/Desktop/Article/R/All works/R-for-Data-Science-and-Machine-Learning-Batch8-NBICT/RDSML-Day-39 ðŸ‘‰ Two-way ANOVA in R (Part-1)")
setwd("~/Desktop/Article/R/All works/R-for-Data-Science-and-Machine-Learning-Batch8-NBICT/RDSML-Day-39 ðŸ‘‰ Two-way ANOVA in R (Part-1)")
setwd("~/Desktop/Article/R/All works/R-for-Data-Science-and-Machine-Learning-Batch8-NBICT/RDSML-Day-39 ðŸ‘‰ Two-way ANOVA in R (Part-1)")
setwd("~/Desktop/Article/R/All works/R-for-Data-Science-and-Machine-Learning-Batch8-NBICT/RDSML-Day-39 ðŸ‘‰ Two-way ANOVA in R (Part-1)")
install.packages(c("tidyverse","car","emmeans","effectsize","performance","broom","broom.helpers","kableExtra","multcomp","multcompView","patchwork"
))
suppressPackageStartupMessages({
library(tidyverse); library(car); library(emmeans); library(effectsize)
library(performance); library(broom); library(broom.helpers)
library(kableExtra); library(multcomp); library(multcompView); library(patchwork)
})
options(contrasts = c("contr.sum","contr.poly"))
theme_set(theme_classic(base_size = 12))
d <- read.csv("cropdata.csv", stringsAsFactors = FALSE)
d <- d %>%
mutate(
y    = as.numeric(y),
fert = factor(fert),
irr  = factor(irr)
) %>%
drop_na(y, fert, irr)
cat("\nCell counts (balance check):\n")
print(with(d, table(fert, irr)))
cat("\nGroup means (preview):\n")
print(d %>% group_by(fert, irr) %>% summarise(n=dplyr::n(), mean=mean(y), sd=sd(y), .groups="drop"))
summs <- d %>%
group_by(fert, irr) %>%
summarise(
n   = dplyr::n(),
mean= mean(y),
sd  = sd(y),
se  = sd/sqrt(n),
ci  = qt(.975, df=n-1)*se,  # 95% CI
.groups = "drop"
)
View(summs)
p_raw <- ggplot(d, aes(irr, y, color=fert)) +
geom_jitter(width=.08, height=0, alpha=.4) +
stat_summary(fun=mean, geom="point", position=position_dodge(width=.4), size=2.4) +
labs(title="Raw data with means", x="Irrigation", y="Yield")
p_ci <- ggplot(summs, aes(irr, mean, group=fert, color=fert)) +
geom_line(position=position_dodge(width=.3)) +
geom_point(size=2, position=position_dodge(width=.3)) +
geom_errorbar(aes(ymin=mean-ci, ymax=mean+ci),
width=.15, position=position_dodge(width=.3)) +
labs(title="Means Â± 95% CI by Fertilizer Ã— Irrigation", x="Irrigation", y="Mean yield")
(p_raw / p_ci) + plot_annotation(title = "Exploratory view")
m <- aov(y ~ fert * irr, data = d)
View(summs)
summary(m)
aov_tab <- Anova(m, type = 3) %>%
tidy() %>%
mutate(p.value = signif(p.value, 3))
kbl(aov_tab, digits = 3, caption = "Two-way ANOVA") %>%
kable_classic(full_width = FALSE, html_font = "Times New Roman")
par(mfrow=c(2,2)); plot(m); par(mfrow=c(1,1))
## â”€â”€ 4) Model diagnostics & assumptions ----
# Visual checks
par(mfrow=c(2,2)); plot(m); par(mfrow=c(1,1))
## â”€â”€ 4) Model diagnostics & assumptions ----
# Visual checks
par(mfrow=c(2,2)); plot(m); par(mfrow=c(1,1))
# Targeted tests (use as guidance, not hard gates)
res <- residuals(m)
shapiro_p <- shapiro.test(res)$p.value
cat("\nShapiro-Wilk p =", signif(shapiro_p,3), "(normality of residuals)\n")
cat("\nShapiro-Wilk p =", signif(shapiro_p,3), "(normality of residuals)\n")
res <- residuals(m)
shapiro_p <- shapiro.test(res)$p.value
cat("\nShapiro-Wilk p =", signif(shapiro_p,3), "(normality of residuals)\n")
lev <- car::leveneTest(y ~ fert*irr, data = d, center = median)
cat("\nLevene test (median-based) for homogeneity of variance:\n"); print(lev)
cat("\nperformance::check_model(m):\n")
print(performance::check_model(m))
cell_tests <- d %>% group_by(fert, irr) %>%
summarise(sw_p = tryCatch(shapiro.test(y)$p.value, error=function(e) NA_real_), .groups="drop")
print(cell_tests)
## â”€â”€ 5) Estimated marginal means (EMMs) & contrasts ----
emm_int <- emmeans(m, ~ fert * irr)
fert_within_irr <- contrast(emmeans(m, ~ fert | irr), method = "pairwise", adjust = "tukey")
cat("\nPairwise fert within each irr:\n"); print(fert_within_irr)
irr_within_fert <- contrast(emmeans(m, ~ irr | fert), method = "pairwise", adjust = "tukey")
cat("\nPairwise irr within each fert:\n"); print(irr_within_fert)
emm_fert <- emmeans(m, ~ fert)
emm_irr  <- emmeans(m, ~ irr)
cat("\nMain effects (fert):\n"); print(contrast(emm_fert, "tukey"))
cat("\nMain effects (irr):\n");  print(contrast(emm_irr,  "tukey"))
cld_letters <- multcomp::cld(emm_int, Letters = letters, adjust = "tukey")
print(cld_letters)
emm_df <- as.data.frame(cld_letters)
p_emm <- ggplot(emm_df, aes(irr, emmean, group=fert, color=fert)) +
geom_line(position=position_dodge(width=.3)) +
geom_point(size=2, position=position_dodge(width=.3)) +
geom_errorbar(aes(ymin=lower.CL, ymax=upper.CL),
width=.15, position=position_dodge(width=.3)) +
geom_text(aes(label=.group), vjust=-1.1, position=position_dodge(width=.3), show.legend = FALSE) +
labs(title="EMMs Â± 95% CI with CLD letters", x="Irrigation", y="Estimated marginal mean")
print(p_emm)
infl <- broom::augment(m) %>%
mutate(.cooks_flag = abs(.cooksd) > (4/ (nrow(d) - length(coef(m)))),
.stdres_flag = abs(.std.resid) > 3)
cat("\nPossible influential points (Cook's D > 4/df or |Std.Resid| > 3):\n")
print(infl %>% filter(.cooks_flag | .stdres_flag))
car::influencePlot(m, main="Influence Plot (Cook's distance)", sub="Look for leverage/outliers")
report_lines <- glue::glue(
"ANOVA (Type III): fert, irr, and their interaction tested on yield.\n",
"Partial eta^2 shown in table; use generalized eta^2 for between-design comparisons."
)
print(report_lines)
write.csv(aov_tab, "anova_table_typeIII_with_effectsizes.csv", row.names = FALSE)
saveRDS(list(
model = m,
aov_table = aov_tab,
emm_interaction = emm_int,
fert_within_irr = fert_within_irr,
irr_within_fert = irr_within_fert,
cld_letters = cld_letters,
influence = infl
), file = "two_way_anova_outputs.rds")
two_way_anova_outputs <- readRDS("~/Desktop/Article/R/All works/R-for-Data-Science-and-Machine-Learning-Batch8-NBICT/RDSML-Day-39 ðŸ‘‰ Two-way ANOVA in R (Part-1)/two_way_anova_outputs.rds")
