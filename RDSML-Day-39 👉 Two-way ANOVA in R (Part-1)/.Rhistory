var1= 500
print('var1')
print(var1)
var_2= mobile
var_2= 'mobile'
print(var_2)
assign('var5', 400)
print(var5)
if_=30
if2= 'mobile phone'
print(class(if_))
print(class(if2))
print(ls())
#find variables
print(ls(all.names = TRUE))
rm(var5)
print(ls(all.names = TRUE))
var5=300
print(ls(all.names = TRUE))
6*8
library(readxl)
data_MoST_24_25 <- read_excel("Desktop/Article/R/All works/data MoST 24-25.xlsx",
sheet = "Sheet4", range = "A1:AA87")
View(data_MoST_24_25)
library(readxl)
pc <- read_excel("Desktop/Article/R/All works/data MoST 24-25.xlsx",
sheet = "Sheet4", range = "A1:AA87")
View(pc)
library(devtools)
install.packages('devtools')
library(devtools)
library(devtools)
library(ggbiplot)
library(devtools)
library(ggbiplot)
library(ggplot2)
pca = prcomp(pc[-1],
center = TRUE,
scale. = TRUE)
pca$scale
print(pca)
summary(pca)
g = ggbiplot(pca,
obs.scale = 1,
var.scale = 1,
groups = pc$water,
ellipse = TRUE,
circle = TRUE,
ellipse.prob = 0.68)
View(g)
g = ggbiplot(pca,
obs.scale = 1,
var.scale = 1,
groups = pc$water,
ellipse = TRUE,
circle = TRUE,
ellipse.prob = 0.68)
g = ggbiplot(pca,
obs.scale = 1,
var.scale = 1,
groups = pc$water,
ellipse = TRUE,
circle = TRUE,
ellipse.prob = 0.68)+
scale_color_discrete(name = '') +
theme(legend.direction = 'horizontal',
legend.position = 'top')
print(g)
g = ggbiplot(pca,
obs.scale = 1,
var.scale = 1,
groups = pc$water,
ellipse = TRUE,
circle = TRUE,
ellipse.prob = 0.68)+
scale_color_discrete(name = '') +
theme(legend.direction = 'horizontal',
legend.position = 'right')
g = ggbiplot(pca,
obs.scale = 1,
var.scale = 1,
groups = pc$water,
ellipse = TRUE,
circle = TRUE,
ellipse.prob = 0.68)+
scale_color_discrete(name = '') +
theme(legend.direction = 'horizontal',
legend.position = 'right')
print(g)
g = ggbiplot(pca,
obs.scale = 1,
var.scale = 1,
groups = pc$water,
ellipse = TRUE,
circle = TRUE,
ellipse.prob = 0.68)+
scale_color_discrete(name = '') +
theme(legend.direction = 'vertical',
legend.position = 'top')
print(g)
library(readr)
cropdata <- read_csv("Desktop/Article/R/All works/R-for-Data-Science-and-Machine-Learning-Batch8-NBICT/RDSML-Day-39 ðŸ‘‰ Two-way ANOVA in R (Part-1)/cropdata.csv")
View(cropdata)
cropdata
str(cropdata)
View(cropdata)
install.packages(c("dplyr","ggplot2","car", 'tidyverse', 'ggpubr', 'emmeans', 'effectsize','performance', 'broom', 'kableExtra'))
library(dplyr)
library(ggplot2)
library(car)
library(tidyverse)
library(ggpubr)
library(emmeans)
library(effectsize)
library(performance)
library(broom)
library(kableExtra)
#Importing data
d = cropdata
#Quick EDA- exploratory descriptive analysis
summs = d %>%
group_by(fert, irr) %>%
summarise(
mean = mean(y),
se = sd(y)/sqrt(n()),
.groups = 'drop')
#Quick data summary visualization
ggplot(summs, aes(x = irr, y = mean, group = fert , color = fert)) +
geom_line() +
geom_point(size = 2) +
geom_errorbar(aes(ymin = mean - se, ymax = mean + se), width = 0.2) +
facet_wrap(~ fert, nrow = 1) +
labs(title = "Mean Crop Yield by Irrigation",
x = "Irrigation",
y = "Mean Crop Yield") +
theme_classic(base_size = 12)
#Part-2 of Two Way Anova
#Fitting the two way anova model
m = aov(y ~ fert + irr + fert * irr, data = d)
summary(m)
#Checking anova assumptions visually
par(mfrow = c(2,2))
plot(m)
group_letters = cld(emmeans(m, ~ fert * irr), Letters = letters)
library(emmeans)
contrast(emmeans(m, ~ fert | irr), method = "pairwise", adjust = "tukey")
#Interaction contrasts (simple effects): effect of irr at each level of fert
library(emmeans)
contrast(emmeans(m, ~ irr | fert), method = "pairwise", adjust = "tukey")
#Main effect comparison (only if interation is negligible)
contrast(emmeans(m, ~ fert), method ="tukey")
contrast(emmeans(m, ~ irr), method ="tukey")
#CLD LETTERS
library(multcomp)
#install.packages("multcompView")
library(multcompView)
group_letters = cld(emmeans(m, ~ fert * irr), Letters = letters)
group_letters
library(broom)
library(kableExtra)
aov_tab <- Anova(m, type = 3) %>%
tidy() %>%
mutate(p.value = signif(p.value, 3))
kbl(aov_tab, digits = 3, caption = "Two-way ANOVA") %>%
kable_classic(full_width = FALSE, html_font = "Times New Roman")
View(aov_tab)
print(aov_tab)
install.packages(c("tidyverse","car","emmeans","effectsize","performance","broom","broom.helpers","kableExtra","multcomp","multcompView","patchwork"
))
install.packages(c("tidyverse","car","emmeans","effectsize","performance","broom","broom.helpers","kableExtra","multcomp","multcompView","patchwork"
))
suppressPackageStartupMessages({
library(tidyverse); library(car); library(emmeans); library(effectsize)
library(performance); library(broom); library(broom.helpers)
library(kableExtra); library(multcomp); library(multcompView); library(patchwork)
})
options(contrasts = c("contr.sum","contr.poly"))
theme_set(theme_classic(base_size = 12))
d <- read.csv("cropdata.csv", stringsAsFactors = FALSE)
d <- read.csv("cropdata.csv", stringsAsFactors = FALSE)
install.packages(c("tidyverse","car","emmeans","effectsize","performance","broom","broom.helpers","kableExtra","multcomp","multcompView","patchwork"
))
suppressPackageStartupMessages({
library(tidyverse); library(car); library(emmeans); library(effectsize)
library(performance); library(broom); library(broom.helpers)
library(kableExtra); library(multcomp); library(multcompView); library(patchwork)
})
theme_set(theme_classic(base_size = 12))
options(contrasts = c("contr.sum","contr.poly"))
theme_set(theme_classic(base_size = 12))
d <- read.csv("cropdata.csv", stringsAsFactors = FALSE)
d <- read.csv("cropdata.csv", stringsAsFactors = FALSE)
d <- read.csv("cropdata.csv", stringsAsFactors = FALSE)
library(readr)
cropdata <- read_csv("Desktop/Article/R/All works/R-for-Data-Science-and-Machine-Learning-Batch8-NBICT/RDSML-Day-39 ðŸ‘‰ Two-way ANOVA in R (Part-1)/cropdata.csv")
View(cropdata)
d = cropdata, stringsAsFactors = FALSE
d <- read.csv("cropdata.csv", stringsAsFactors = FALSE)
setwd("~/Desktop/Article/R/All works/R-for-Data-Science-and-Machine-Learning-Batch8-NBICT/RDSML-Day-39 ðŸ‘‰ Two-way ANOVA in R (Part-1)")
d <- read.csv("cropdata.csv", stringsAsFactors = FALSE)
d <- d %>%
mutate(
y    = as.numeric(y),
fert = factor(fert),
irr  = factor(irr)
) %>%
drop_na(y, fert, irr)
print(d)
d <- d %>%
mutate(
y    = as.numeric(y),
fert = factor(fert),
irr  = factor(irr)
) %>%
drop_na(y, fert, irr)
cat("\nCell counts (balance check):\n")
print(with(d, table(fert, irr)))
cat("\nGroup means (preview):\n")
print(d %>% group_by(fert, irr) %>% summarise(n=dplyr::n(), mean=mean(y), sd=sd(y), .groups="drop"))
summs <- d %>%
group_by(fert, irr) %>%
summarise(
n   = dplyr::n(),
mean= mean(y),
sd  = sd(y),
se  = sd/sqrt(n),
ci  = qt(.975, df=n-1)*se,  # 95% CI
.groups = "drop"
)
summs <- d %>%
group_by(fert, irr) %>%
summarise(
n   = dplyr::n(),
mean= mean(y),
sd  = sd(y),
se  = sd/sqrt(n),
ci  = qt(.975, df=n-1)*se,  # 95% CI
.groups = "drop"
)
View(summs)
print(summs)
p_raw <- ggplot(d, aes(irr, y, color=fert)) +
geom_jitter(width=.08, height=0, alpha=.4) +
stat_summary(fun=mean, geom="point", position=position_dodge(width=.4), size=2.4) +
labs(title="Raw data with means", x="Irrigation", y="Yield")
p_raw
p_ci <- ggplot(summs, aes(irr, mean, group=fert, color=fert)) +
geom_line(position=position_dodge(width=.3)) +
geom_point(size=2, position=position_dodge(width=.3)) +
geom_errorbar(aes(ymin=mean-ci, ymax=mean+ci),
width=.15, position=position_dodge(width=.3)) +
labs(title="Means Â± 95% CI by Fertilizer Ã— Irrigation", x="Irrigation", y="Mean yield")
p_ci
(p_raw / p_ci) + plot_annotation(title = "Exploratory view")
m <- aov(y ~ fert * irr, data = d)
m
