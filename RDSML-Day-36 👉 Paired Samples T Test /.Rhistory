var1= 500
print('var1')
print(var1)
var_2= mobile
var_2= 'mobile'
print(var_2)
assign('var5', 400)
print(var5)
if_=30
if2= 'mobile phone'
print(class(if_))
print(class(if2))
print(ls())
#find variables
print(ls(all.names = TRUE))
rm(var5)
print(ls(all.names = TRUE))
var5=300
print(ls(all.names = TRUE))
6*8
library(readxl)
data_MoST_24_25 <- read_excel("Desktop/Article/R/All works/data MoST 24-25.xlsx",
sheet = "Sheet4", range = "A1:AA87")
View(data_MoST_24_25)
library(readxl)
pc <- read_excel("Desktop/Article/R/All works/data MoST 24-25.xlsx",
sheet = "Sheet4", range = "A1:AA87")
View(pc)
library(devtools)
install.packages('devtools')
library(devtools)
library(devtools)
library(ggbiplot)
library(devtools)
library(ggbiplot)
library(ggplot2)
pca = prcomp(pc[-1],
center = TRUE,
scale. = TRUE)
pca$scale
print(pca)
summary(pca)
g = ggbiplot(pca,
obs.scale = 1,
var.scale = 1,
groups = pc$water,
ellipse = TRUE,
circle = TRUE,
ellipse.prob = 0.68)
View(g)
g = ggbiplot(pca,
obs.scale = 1,
var.scale = 1,
groups = pc$water,
ellipse = TRUE,
circle = TRUE,
ellipse.prob = 0.68)
g = ggbiplot(pca,
obs.scale = 1,
var.scale = 1,
groups = pc$water,
ellipse = TRUE,
circle = TRUE,
ellipse.prob = 0.68)+
scale_color_discrete(name = '') +
theme(legend.direction = 'horizontal',
legend.position = 'top')
print(g)
g = ggbiplot(pca,
obs.scale = 1,
var.scale = 1,
groups = pc$water,
ellipse = TRUE,
circle = TRUE,
ellipse.prob = 0.68)+
scale_color_discrete(name = '') +
theme(legend.direction = 'horizontal',
legend.position = 'right')
g = ggbiplot(pca,
obs.scale = 1,
var.scale = 1,
groups = pc$water,
ellipse = TRUE,
circle = TRUE,
ellipse.prob = 0.68)+
scale_color_discrete(name = '') +
theme(legend.direction = 'horizontal',
legend.position = 'right')
print(g)
g = ggbiplot(pca,
obs.scale = 1,
var.scale = 1,
groups = pc$water,
ellipse = TRUE,
circle = TRUE,
ellipse.prob = 0.68)+
scale_color_discrete(name = '') +
theme(legend.direction = 'vertical',
legend.position = 'top')
print(g)
setwd("~/Desktop/Article/R/All works/R-for-Data-Science-and-Machine-Learning-Batch8-NBICT/RDSML-Day-36 ðŸ‘‰ Paired Samples T Test ")
library(readr)
paired_samples_t_test <- read_csv("paired-samples-t-test.csv")
View(paired_samples_t_test)
View(paired_t_test))
View(paired_t_test)
View(paired_samples_t_test)
data= paired_samples_t_test
View(data)
data$differences = data$carb - data$carb_protein
View(data)
shapiro.test(data$differences)
differ = data$carb - data$carb_protein
shapiro.test(differ)
differ
#checking for outliers
boxplot(differ, main="Boxplot of Differences", ylab="Differences")
t_test_result = t.test(data$carb, data$carb_protein, paired=TRUE)
t.test(data$carb, data$carb_protein, paired=TRUE)
#checking for outliers
boxplot(differ, main="Boxplot of Differences", ylab="Differences")
boxplot(differ)
t.test(x= data$carb,
y = data$carb_protein,
paired=TRUE)
#Visualize the data
library(ggplot2)
library(reshape2)
data_melt = melt(data)
View(data_melt)
ggplot(data_melt, aes(x=variable, y=value, fill=variable)) +
geom_boxplot() +
geom_jitter(width=0.2) +
labs(title="Paired Sample T Test", x="Treatment", y="Values") +
theme_minimal()
wilcox.test(x= data$carb,
y = data$carb_protein,
paired=TRUE)
wilcox.test(x= data$carb,
y = data$carb_protein,
paired=TRUE)
mean(data$carb)
sd(data$carb)
mean(data$carb_protein)
sd(data$carb_protein)
#Calculating effect size (Cohen's d)
library(effsize)
#Calculating effect size (Cohen's d)
library(effsize)
library(effectsize)
install.packages("effsize")
cohen.d(data$carb, data$carb_protein, paired=TRUE)
library(effsize)
cohen.d(data$carb, data$carb_protein, paired=TRUE)
#Calculating effect size (Cohen's d)
install.packages("effsize")
library(effsize)
cohen.d(data$carb, data$carb_protein, paired=TRUE)
cohen.d(data$carb, data$carb_protein, paired=TRUE)
